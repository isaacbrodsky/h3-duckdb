name: Linux
on: [push, pull_request,repository_dispatch]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash

jobs:
  linux:
    name: Linux Release
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    strategy:
      matrix:
        # Add commits/tags to build against other DuckDB versions
        duckdb_version: [ '<submodule_version>' ]
        arch: ['linux_amd64', 'linux_arm64', 'linux_amd64_gcc4']
        include:
          - arch: 'linux_amd64_gcc4'
            container: 'quay.io/pypa/manylinux2014_x86_64'
          - arch: 'linux_amd64'
            container: 'ubuntu:18.04'
          - arch: 'linux_arm64'
            container: 'ubuntu:18.04'
    env:
      GEN: Ninja

    steps:
    - name: Install required ubuntu packages
      if: ${{ matrix.arch == 'linux_amd64' || matrix.arch == 'linux_arm64' }}
      run: |
        apt-get update -y -qq
        apt-get install -y -qq software-properties-common
        add-apt-repository ppa:git-core/ppa
        apt-get update -y -qq
        apt-get install -y -qq ninja-build make gcc-multilib g++-multilib libssl-dev wget openjdk-8-jdk zip maven unixodbc-dev libc6-dev-i386 lib32readline6-dev libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip build-essential checkinstall libffi-dev curl libz-dev openssh-client

    - name: Install Git 2.18.5
      if: ${{ matrix.arch == 'linux_amd64' || matrix.arch == 'linux_arm64' }}
      run: |
        wget https://github.com/git/git/archive/refs/tags/v2.18.5.tar.gz
        tar xvf v2.18.5.tar.gz
        cd git-2.18.5
        make
        make prefix=/usr install
        git --version

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'true'

    - name: Checkout DuckDB to version
      if: ${{ matrix.duckdb_version != '<submodule_version>'}}
      run: |
        cd duckdb
        git checkout ${{ matrix.duckdb_version }}

    - name: Setup ManyLinux2014
      if: ${{ matrix.arch == 'linux_amd64_gcc4' }}
      run: |
        ./duckdb/scripts/setup_manylinux2014.sh general aws-cli ccache ssh python_alias

    - name: Setup Ubuntu
      if: ${{ matrix.arch == 'linux_amd64' || matrix.arch == 'linux_arm64' }}
      uses: ./duckdb/.github/actions/ubuntu_18_setup
      with:
        aarch64_cross_compile: ${{ matrix.arch == 'linux_arm64' && 1 }}

    - name: Build extension
      env:
        GEN: ninja
        STATIC_LIBCPP: 1
        CC: ${{ matrix.arch == 'linux_arm64' && 'aarch64-linux-gnu-gcc' || '' }}
        CXX: ${{ matrix.arch == 'linux_arm64' && 'aarch64-linux-gnu-g++' || '' }}
      run: |
        make release

    - name: Test extension
      if: ${{ matrix.arch != 'linux_arm64'}}
      run: |
        make test

    - uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.arch}}-extensions
        path: |
          build/release/extension/h3ext/h3ext.duckdb_extension
